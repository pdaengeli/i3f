name: Generate IIIF presentation manifests based on metadata input files

on: [push]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - uses: yaananth/run-notebook@v2
      env:
        RUNNER: ${{ toJson(runner) }}
        SECRETS: ${{ toJson(secrets) }}
        GITHUB: ${{ toJson(github) }}
      with:
        notebook: "./generate-manifests.ipynb"
        params: "./generate-manifests-params.json"
        isReport: False
        poll: True
# directory listing
    # - run: pwd
    # - run: ls -l
    - run: mkdir presentation && mv ${{ RUNNER.temp }}/nb-runner/presentation/* presentation
    - run: mkdir debug && mv ${{ RUNNER.temp }}/nb-runner/* debug
    - run: ls -l
    - name: Generate Directory Listings
      uses: jayanta525/github-pages-directory-listing@v4.0.0
      with:
        FOLDER: presentation #directory to generate index    
    - uses: actions/upload-pages-artifact@v3
      if: always()
      with:
        name: output
        path: .
      env:
        RUNNER: ${{ toJson(runner) }}

# Deploy job
  deploy:
    # Add a dependency to the build job
    needs: run

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
        with: 
          artifact_name: output
        
# then publish manifests at iiif.annemarie-schwarzenbach.ch/i3f/presentation/